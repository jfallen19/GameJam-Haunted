using UnityEngine;
using System.Collections;

public class PlayerScript : MonoBehaviour {

	#region Public Variables
	[Tooltip( "How far away can the player haunt an object?" )]
	public float maxHauntDistance = 10.0f;
	[Tooltip( "Which physics layers should be able to be haunted?" )]
	public LayerMask layersToHaunt;
	#endregion
	public string movementtype = "ghost";
	public float movespeed = 2;
	/*
	 * set by haunted item. normal is ghost.
	 * cube = Can not move when on the ground. Can hop. Has great air control.
	 * ball = Can roll and move in air.
	 * vehicle = can drive. No air control.
	 * */

	#region Private Variables
	private Camera cam;
	private GameObject CurrentHaunted = null;



	#endregion

	#region Unity Callbacks
	public void Start() {
		this.cam = this.GetComponentInChildren<Camera>();
		Cursor.lockState = CursorLockMode.Locked;
		Cursor.visible = false;

		//todo: Define custom controls here.
	}

	public void Update() {
		Vector3 UpdatedMove = this.transform.position;
		if(CurrentHaunted != null)
		{
			UpdatedMove = CurrentHaunted.transform.position;
		}

		if ( Input.GetButtonDown( "Haunt" ) ) {
			if(CurrentHaunted != null)
			{
				CurrentHaunted = null;
				movementtype = "ghost";
				//eject from current object and stop execution.
				return;
			}
			RaycastHit hit;
			if ( Physics.Raycast( this.cam.transform.position, this.cam.transform.forward, out hit, this.maxHauntDistance, this.layersToHaunt ) ) {
				Hauntable h = hit.collider.GetComponent<Hauntable>();
				if ( h != null ) {
					CurrentHaunted = h.Haunt();
					movementtype = CurrentHaunted.GetComponent<Hauntable>().movetype;
				}
			}
		}

		//Update controls;
		if(Input.GetButton("Vertical")){
			if(movementtype == "ghost")
			{
				UpdatedMove += transform.forward * Input.GetAxis("Vertical") * (movespeed * Time.deltaTime*10);
			}
		}
		if(Input.GetButton("Horizontal")){
			if(movementtype == "ghost")
			{
				UpdatedMove += transform.right * Input.GetAxis("Horizontal") * (movespeed * Time.deltaTime*10);
			}
		}
		if(Input.GetButton("Jump")){
			if(movementtype == "cube")
			{
				UpdatedMove += transform.right * Input.GetAxis("Horizontal") * (movespeed * Time.deltaTime*10);
			}
		}
		this.transform.position = UpdatedMove;
	}

	
	#endregion

}
